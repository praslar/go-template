stages:
  - test
  - release
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  GIT_STRATEGY: fetch
  GIT_DEPTH: 20
  SERVICE: go-template
  TEAM: jx
  APP_NAME: central
  VERSION: $CI_COMMIT_REF_NAME

go_test:
  image: golang:1.14
  stage: test
  except:
    - tags
  script:
    # make sure this can pass grammar check at least
    - go test ./... -cover
  allow_failure: true

release:tag:
  stage: release
  image: golang:1.14 # we could use more lightweight image
  variables:
    GITLAB_TOKEN: ""
  only:
    - master
  script:
    - export tag="v$(date +%Y%m%d)-${CI_PIPELINE_IID}"
    - export url="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/repository/tags?tag_name=${tag}&ref=${CI_COMMIT_SHA}&private_token=${GITLAB_TOKEN}"
    - curl -s -X POST $url

build:docker-image:
  stage: build
  image: docker:19.03.1
  only:
    - tags
  services:
    - docker:19.03.1-dind
  script:
    - export image="${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - export build_arg="--build-arg VERSION=${CI_COMMIT_REF_NAME} --build-arg SERVICE=${SERVICE}"
    - docker build -t ${image} ${build_arg} .
    - docker push ${image}

.deploy:
  image: $CI_IMAGE
  stage: deploy
  tags: [docker]
  environment:
    name: stg
  services:
    - docker:19.03-dind
  only:
    - tags
  variables:
    APP_ENV: stg
    SERVICE_IMAGE: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    KUBECONFIG_DATA: "$stg_kubeconfig_data"
    DB_HOST: "$stg_db_host"
    DB_PORT: "$stg_db_port"
    DB_USER: "$stg_db_user"
    DB_PASS: "$stg_db_password"
    DB_NAME: "stg_go_template"
    DB_SCHEMA: "$stg_db_schema"
    HTTP_PORT: "80"
  script:
    - /deploy.sh

deploy:dev:
  extends: .deploy
  environment:
    name: dev
  variables:
    APP_ENV: dev
    k8s_namespace: dev
    DB_NAME: "dev_go_template"

deploy:stg:
  when: manual
  extends: .deploy

deploy:prd:
  extends: .deploy
  when: manual
  environment:
    name: prd
  variables:
    APP_ENV        : prd
    SERVICE_IMAGE  : "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    k8s_namespace  : prd
    KUBECONFIG_DATA: "$PRD_KUBECONFIG_DATA"
    DB_HOST        : "$PRD_DB_HOST"
    DB_PORT        : "$PRD_DB_PORT"
    DB_USER        : "$PRD_DB_USER"
    DB_PASS        : "$PRD_DB_PASSWORD"
    DB_NAME        : "go_template"
    DB_SCHEMA      : "public"
    HTTP_PORT      : "80"

pages:
  stage: release
  image: alpine:3.11
  only:
    - master
  artifacts:
    paths:
      - public
  script:
    - cp -r swagger public
